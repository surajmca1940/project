# Generated by Django 5.2.6 on 2025-09-10 09:10

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
        ('admin_dashboard', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemHealth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu_usage', models.FloatField()),
                ('memory_usage', models.FloatField()),
                ('database_connections', models.IntegerField()),
                ('response_time', models.FloatField(help_text='Average response time in milliseconds')),
                ('error_count', models.IntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='alert',
            name='institution',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.institution'),
        ),
        migrations.AddField(
            model_name='alert',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.region'),
        ),
        migrations.AddField(
            model_name='alert',
            name='severity',
            field=models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10),
        ),
        migrations.AlterField(
            model_name='alert',
            name='alert_type',
            field=models.CharField(choices=[('crisis', 'Crisis Alert'), ('high_usage', 'High Usage'), ('system', 'System Alert'), ('counselor_overload', 'Counselor Overload'), ('regional_spike', 'Regional Activity Spike')], max_length=20),
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('widget_type', models.CharField(choices=[('chart', 'Chart Widget'), ('stat', 'Statistics Widget'), ('alert', 'Alert Widget'), ('map', 'Regional Map Widget'), ('list', 'List Widget')], max_length=20)),
                ('chart_type', models.CharField(blank=True, choices=[('line', 'Line Chart'), ('bar', 'Bar Chart'), ('pie', 'Pie Chart'), ('area', 'Area Chart')], max_length=20)),
                ('position', models.IntegerField(default=0, help_text='Display order on dashboard')),
                ('is_active', models.BooleanField(default=True)),
                ('config', models.JSONField(default=dict, help_text='Widget-specific configuration')),
                ('refresh_interval', models.IntegerField(default=30, help_text='Refresh interval in seconds')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('institution_filter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.institution')),
                ('region_filter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.region')),
            ],
            options={
                'ordering': ['position', 'title'],
            },
        ),
        migrations.CreateModel(
            name='RealTimeMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('active_users', 'Active Users'), ('ai_sessions', 'AI Chat Sessions'), ('appointments_today', 'Appointments Today'), ('crisis_interventions', 'Crisis Interventions'), ('resource_downloads', 'Resource Downloads'), ('peer_support_posts', 'Peer Support Posts'), ('counselor_availability', 'Counselor Availability')], max_length=30)),
                ('value', models.FloatField()),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.institution')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.region')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['metric_type', 'timestamp'], name='admin_dashb_metric__4e48ce_idx'), models.Index(fields=['institution', 'timestamp'], name='admin_dashb_institu_5a17c8_idx'), models.Index(fields=['region', 'timestamp'], name='admin_dashb_region__de08f7_idx')],
            },
        ),
        migrations.CreateModel(
            name='RegionalAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('total_active_users', models.IntegerField(default=0)),
                ('language_usage', models.JSONField(default=dict, help_text='Language preference distribution')),
                ('cultural_resource_access', models.JSONField(default=dict, help_text='Cultural resource access patterns')),
                ('peak_usage_hours', models.JSONField(default=list, help_text='Peak usage hours for the region')),
                ('crisis_interventions', models.IntegerField(default=0)),
                ('common_concerns', models.JSONField(default=list, help_text='Most common mental health concerns')),
                ('resource_effectiveness', models.JSONField(default=dict, help_text='Effectiveness ratings of resources')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='accounts.region')),
            ],
            options={
                'ordering': ['-date', 'region'],
                'unique_together': {('region', 'date')},
            },
        ),
    ]
